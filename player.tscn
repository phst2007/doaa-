[gd_scene load_steps=4 format=3 uid="uid://durjcypbrxjuh"]

[ext_resource type="PackedScene" uid="uid://b1tfm587c24g4" path="res://tophat.blend" id="2_onrkg"]

[sub_resource type="GDScript" id="GDScript_4flbx"]
script/source = "extends CharacterBody3D


var speed = 5.0
const walkspeed = 5.0
const crouchspeed = 3.0
const JUMP_VELOCITY = 4.5
const mouse_sens = 0.4



func _ready():
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)

func _Input(event):
	if event is InputEventMouseMotion:
		rotate_y(event.relative.x * mouse_sens)
		
	
	
	
	
func _physics_process(delta: float) -> void:
	
	if Input.is_action_pressed(\"crouch\"):
		speed = crouchspeed
	else:
		speed = walkspeed
		
		
		
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"jump\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir := Input.get_vector(\"left\", \"right\", \"forward\", \"back\")
	var direction := (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * speed
		velocity.z = direction.z * speed
	else:
		velocity.x = move_toward(velocity.x, 0, speed)
		velocity.z = move_toward(velocity.z, 0, speed)

	move_and_slide()
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_i3pqv"]
height = 2.5223

[node name="player" type="CharacterBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.395235, 0)
script = SubResource("GDScript_4flbx")

[node name="standingcolision" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1.08698, 0, 0, 0, 1, 0, 0.976496, 0)
shape = SubResource("CapsuleShape3D_i3pqv")

[node name="crouchingcolision" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.6, 0, 0, 0, 1, 0, 0.37707, 0)
shape = SubResource("CapsuleShape3D_i3pqv")

[node name="tophat" parent="." instance=ExtResource("2_onrkg")]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, -1.447, 0)

[node name="head" type="Node3D" parent="."]

[node name="Camera" type="Camera3D" parent="head"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00058794, 2.11606, -0.105572)
fov = 110.0

[node name="RayCast3D" type="RayCast3D" parent="head/Camera"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.00182295, -0.907499, 0.0119548)
